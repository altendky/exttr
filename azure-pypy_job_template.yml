parameters:
  platform: ''
  vmImage: ''
  url_2: ''
  url_3: ''
  extracter: ''
  version: ''

jobs:
- job: ${{ parameters.platform }}_PyPy

  pool:
    vmImage: ${{ parameters.vmImage }}

  strategy:
    matrix:
      2.7:
        url: ${{ parameters.url_2 }}
        pypy_binary: 'pypy'
      3.5:
        url: ${{ parameters.url_3 }}
        pypy_binary: 'pypy3'

  steps:
    - bash: |
        echo "##vso[task.setvariable variable=PATH]$(System.DefaultWorkingDirectory)/pypy.tmp/pypy/bin:$(PATH)"
      condition: eq( variables['Agent.OS'], 'Linux' )
    - bash: |
        echo "##vso[task.setvariable variable=PATH]$(System.DefaultWorkingDirectory)/pypy.tmp/pypy/bin:$(PATH)"
      condition: eq( variables['Agent.OS'], 'Darwin' )
    - bash: |
        echo "##vso[task.setvariable variable=PATH]$(System.DefaultWorkingDirectory)\pypy.tmp\pypy;$(PATH)"
      condition: eq( variables['Agent.OS'], 'Windows_NT' )
    - bash: |
        mkdir pypy.tmp
        cd pypy.tmp
        curl --location --output archive $(url)
        ${{ parameters.extracter }} archive
        rm archive
        mv ./* pypy
        cd ..
      displayName: 'Get PyPy'
    - bash: |
        type $(pypy_binary)
        $(pypy_binary) --version
      displayName: 'Check for PyPy'
    - bash: |
        curl --output pypy.tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py
        $(pypy_binary) pypy.tmp/get-pip.py
      displayName: 'Get PIP'
    - bash: |
        $(pypy_binary) -m pip install tox pytest-azurepipelines
        $(pypy_binary) -m tox -e $(pypy_binary)
        $(pypy_binary) -m tox -e codecov
      displayName: 'Test'
      env:
        CODECOV_TOKEN: '$(CODECOV_TOKEN)'
