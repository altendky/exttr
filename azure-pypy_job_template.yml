parameters:
  platform: ''
  vmImage: ''
  url_2: ''
  url_3: ''
  extracter: ''
  version: ''

jobs:
- job: PyPy_${{ parameters.platform }}

  pool:
    vmImage: ${{ parameters.vmImage }}

  strategy:
    matrix:
      2_7:
        url: ${{ parameters.url_2 }}
        pypy_binary: 'pypy'
      3_5:
        url: ${{ parameters.url_3 }}
        pypy_binary: 'pypy3'

  steps:
    - bash: |
        echo PATH: ${PATH}
        echo "##vso[task.setvariable variable=PATH]${PWD}/pypy.tmp/pypy/bin:${PWD}/pypy.tmp/pypy:${PATH}"
        mkdir pypy.tmp
        cd pypy.tmp
        curl --location --output archive $(url)
        ${{ parameters.extracter }} archive
        rm archive
        mv ./* pypy
        cd ..
        ls -l pypy.tmp/pypy
        ls -l pypy.tmp/pypy/bin
      displayName: 'Get PyPy'
    - bash: |
        ls -l pypy.tmp/pypy
        ls -l pypy.tmp/pypy/bin
        echo PATH: ${PATH}
        type $(pypy_binary)
        $(pypy_binary) --version
      displayName: 'Check for PyPy'
    - bash: |
        curl --output pypy.tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py
        $(pypy_binary) pypy.tmp/get-pip.py
      displayName: 'Get PIP'
    - bash: |
        $(pypy_binary) -m pip install tox pytest-azurepipelines
        $(pypy_binary) -m tox -e $(pypy_binary)
        $(pypy_binary) -m tox -e codecov
      displayName: 'Test'
      env:
        CODECOV_TOKEN: '$(CODECOV_TOKEN)'


